# name: Deploy Next.js application

# on:
#   push:
#     branches:
#       # - deploy-with-docker-ec2
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Checkout Source
#         uses: actions/checkout@v4
#       - name: Create .env file
#         run: echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> .env &&  echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> .env && echo "NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}" >> .env &&  echo "NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}" >> .env &&  echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL }}" >> .env && echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${{ secrets.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL }}" >> .env && echo "mongo_url=${{ secrets.mongo_url }}" >> .env && echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
#       - name: Build docker image
#         run: docker build -t yashmali28/nextjs-app .
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - name: Publish image to docker hub
#         run: docker push yashmali28/nextjs-app:latest

#   deploy:
#     needs: build
#     runs-on: self-hosted
#     steps:
#       - name: Pull image from docker hub
#         run: docker pull yashmali28/nextjs-app:latest
#       - name: Delete old container
#         run: docker rm -f nextjs-app-container  
#       - name: Run docker container
#         run: docker run -d -p 3000:3000 --name nextjs-app-container yashmali28/nextjs-app:latest